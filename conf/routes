# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                      controllers.Application.index
GET         /restrictedObserver                    controllers.Application.restrictedObserver
GET         /restrictedTestDesigner                controllers.Application.restrictedTestDesigner(display: String ?= "testGroups")
GET         /createNewTest                         controllers.Application.createNewTest
GET         /restrictedTestDeveloper               controllers.Application.restrictedTestDeveloper
GET         /assets/javascript/routes.js           controllers.Application.jsRoutes

GET         /profile                               controllers.Application.profile

GET         /login                                 controllers.Application.login
POST        /login                                 controllers.Application.doLogin

GET         /logout                                com.feth.play.module.pa.controllers.Authenticate.logout
GET         /authenticate/:provider                com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET         /signup                                controllers.Application.signup
POST        /signup                                controllers.Application.doSignup

GET         /accounts/unverified                   controllers.Signup.unverified
GET         /authenticate/:provider/denied         controllers.Signup.oAuthDenied(provider: String)

GET         /accounts/verify/:token                controllers.Signup.verify(token: String)
GET         /accounts/exists                       controllers.Signup.exists

GET         /accounts/password/reset/:token        controllers.Signup.resetPassword(token: String)
POST        /accounts/password/reset               controllers.Signup.doResetPassword

GET         /accounts/password/change              controllers.Account.changePassword
POST        /accounts/password/change              controllers.Account.doChangePassword

GET         /accounts/verify                       controllers.Account.verifyEmail

GET         /accounts/add                          controllers.Account.link

GET         /accounts/link                         controllers.Account.askLink
POST        /accounts/link                         controllers.Account.doLink

GET         /accounts/merge                        controllers.Account.askMerge
POST        /accounts/merge                        controllers.Account.doMerge

GET         /login/password/forgot                 controllers.Signup.forgotPassword(email: String ?= "")
POST        /login/password/forgot                 controllers.Signup.doForgotPassword

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                          controllers.Assets.at(path="/public", file)
GET         /webjars/*file                         controllers.WebJarAssets.at(file)

#test group management
GET         /getCreateGroupEditorView              controllers.GroupController.getCreateGroupEditorView
POST        /doCreateTestGroup                     controllers.GroupController.doCreateTestGroup
GET         /editGroupForm                         controllers.GroupController.editGroupForm(id: Long)
POST        /doEditGroup                           controllers.GroupController.doEditGroup
GET         /doDeleteGroup                         controllers.GroupController.doDeleteGroup(id: Long)
GET         /getGroupDetailView                    controllers.GroupController.getGroupDetailView(id: Long)
POST        /doEditGroupField                      controllers.GroupController.doEditGroupField()

#test assertion management
GET         /getCreateAssertionEditorView          controllers.AssertionController.getCreateAssertionEditorView(groupId: Long)
POST        /doCreateAssertion                     controllers.AssertionController.doCreateAssertion
GET         /editAssertionForm                     controllers.AssertionController.editAssertionForm(id: Long)
POST        /doEditAssertion                       controllers.AssertionController.doEditAssertion
GET         /doDeleteAssertion                     controllers.AssertionController.doDeleteAssertion(id: Long)
GET         /getAssertionDetailView                controllers.AssertionController.getAssertionDetailView(id: Long, display : String ?= "details")
POST        /doEditAssertionField                  controllers.AssertionController.doEditAssertionField()

#test case management
GET         /getCreateCaseEditorView               controllers.TestCaseController.getCreateCaseEditorView(assertionId: Long)
POST        /doCreateCase                          controllers.TestCaseController.doCreateCase
GET         /getEditCaseEditorView                 controllers.TestCaseController.getEditCaseEditorView(id: Long)
POST        /doEditCase                            controllers.TestCaseController.doEditCase
GET         /doDeleteCase                          controllers.TestCaseController.doDeleteCase(id: Long)
GET         /viewTestCase                          controllers.TestCaseController.viewTestCase(id: Long, showJobs: Boolean)
POST        /doEditCaseField                       controllers.TestCaseController.doEditCaseField()

#JOB management

GET         /getCreateJobEditorView                controllers.JobController.getCreateJobEditorView(testCaseId: Long)
POST        /doCreateJob                           controllers.JobController.doCreateJob()
GET         /getEditJobEditorView                  controllers.JobController.getEditJobEditorView(id: Long)
GET         /viewJob                               controllers.JobController.displayJob(id: Long, showHistory: Boolean)
GET         /doDeleteJob                           controllers.JobController.doDeleteJob(id: Long)
POST        /doEditJob                             controllers.JobController.doEditJob()
GET         /viewTestRunHistory                    controllers.JobController.viewTestRunHistory(testRunId: Long)


#test asset management
POST        /doCreateTestAsset                     controllers.TestAssetController.doCreateTestAsset
GET         /createNewAssetForm                    controllers.TestAssetController.createNewAssetForm
GET         /editAssetForm                         controllers.TestAssetController.editAssetForm(id: Long)
POST        /doEditAsset                           controllers.TestAssetController.doEditAsset
GET         /doDeleteAsset                         controllers.TestAssetController.doDeleteAsset(id: Long)
GET         /downloadAsset                         controllers.TestAssetController.downloadAsset(id: Long)

#TESTING
POST        /testme                                controllers.Tester.test
GET         /runTest                               controllers.Tester.runTest(id: Long, userId: Long)
GET         /syncTest                              controllers.Tester.syncTest(id: Long, userId: Long)

#test run listing
GET         /listTestRunsForm                      controllers.WrapperController.listTestRuns(configurationId: Long)
GET         /viewReport                            controllers.WrapperController.viewReport(testRunId: Long, type: String)

#Wrappers
GET         /createNewWrapperForm                  controllers.WrapperController.createNewWrapperForm
POST        /doCreateWrapper                       controllers.WrapperController.doCreateWrapper
GET         /doDeleteWrapper                       controllers.WrapperController.doDeleteWrapper(id: Long)
GET         /editWrapperForm                       controllers.WrapperController.editWrapperForm(id: Long)
POST        /doEditWrapper                         controllers.WrapperController.doEditWrapper

#SSE Test
GET         /wrapperStatusFeed                     controllers.SSEHandler.wrapperStatusFeed(id: Long)
GET         /jobQueueFeed                          controllers.TestEngineController.jobQueueFeed
GET         /jobStatusFeed                         controllers.TestEngineController.jobStatusFeed
GET         /historyFeed                           controllers.TestEngineController.historyFeed
GET         /logFeed                               controllers.TestEngineController.logFeed
GET         /enqueueJob                            controllers.TestEngineController.enqueueJob(id: Long)
GET         /cancelJob                             controllers.TestEngineController.cancelJob(index: Int)
GET         /cancelActiveJob                       controllers.TestEngineController.cancelActiveJob
